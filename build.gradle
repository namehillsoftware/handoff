plugins {
	id 'java'
	id 'java-library'
	id 'maven-publish'
	id 'signing'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.2'
	id "com.palantir.git-version" version "0.12.3"
}

repositories {
    mavenCentral()
}

version = gitVersion()

group = "com.namehillsoftware"
archivesBaseName = "handoff"

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

sourceSets {
    main {
        java {
            sourceCompatibility = JavaVersion.VERSION_1_7
            targetCompatibility = JavaVersion.VERSION_1_7
        }
    }

    test {
        java {
            sourceCompatibility = JavaVersion.VERSION_1_8
            targetCompatibility = JavaVersion.VERSION_1_8
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'org.mockito:mockito-core:2.+'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:2.+'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

if (!hasProperty("sonatypeUsername")) {
	sonatypeUsername = ""
}

if (!hasProperty("sonatypePassword")) {
	sonatypePassword = ""
}

//signing {
//	required { gradle.taskGraph.hasTask("uploadArchives") }
//	sign configurations.archives
//}

//uploadArchives {
//	repositories {
//		mavenDeployer {
//			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
//
//			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
//				authentication(userName: sonatypeUsername, password: sonatypePassword)
//			}
//
//			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
//				authentication(userName: sonatypeUsername, password: sonatypePassword)
//			}
//
//			pom.project {
////                name 'handoff'
//				packaging 'jar'
//				// optionally artifactId can be defined here
//				description 'Promises Library for Java'
//				url 'http://www.namehillsoftware.com/'
//
//				scm {
//					connection 'https://github.com/namehillsoftware/handoff.git'
//					developerConnection 'https://github.com/namehillsoftware/handoff.git'
//					url 'https://github.com/namehillsoftware/handoff'
//				}
//
//				licenses {
//					license {
//						url 'https://github.com/namehillsoftware/handoff/blob/master/LICENSE'
//					}
//				}
//
//				developers {
//					developer {
//						id 'david'
////                        name 'David Vedvick'
//						email 'dvedvick@gmail.com'
//					}
//				}
//			}
//		}
//	}
//}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = 'handoff'
			from components.java
			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
			pom {
				name = 'handoff'
				description = 'A concise description of my library'
				url = 'https://github.com/namehillsoftware/handoff'
				licenses {
					license {
						name = "The Apache Software License, Version 2.0"
						url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
					}
				}
				developers {
					developer {
						id = 'david'
						name = 'David Vedvick'
						email = 'dvedvick@gmail.com'
					}
				}
				scm {
					url = 'https://github.com/namehillsoftware/handoff'
				}
			}
		}
	}
	repositories {
		maven {
			// change URLs to point to your repos, e.g. http://my.org/repo
			def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
			def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
		}
	}
}

signing {
	sign publishing.publications.mavenJava
}
